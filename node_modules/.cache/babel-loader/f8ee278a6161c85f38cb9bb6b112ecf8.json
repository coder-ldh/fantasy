{"remainingRequest":"/Users/wenjian/Desktop/github/fantasy/node_modules/babel-loader/lib/index.js!/Users/wenjian/Desktop/github/fantasy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wenjian/Desktop/github/fantasy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wenjian/Desktop/github/fantasy/src/components/movieIndex/cityList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wenjian/Desktop/github/fantasy/src/components/movieIndex/cityList/index.vue","mtime":1590030339989},{"path":"/Users/wenjian/Desktop/github/fantasy/node_modules/cache-loader/dist/cjs.js","mtime":1590023966642},{"path":"/Users/wenjian/Desktop/github/fantasy/node_modules/babel-loader/lib/index.js","mtime":1590023611809},{"path":"/Users/wenjian/Desktop/github/fantasy/node_modules/cache-loader/dist/cjs.js","mtime":1590023966642},{"path":"/Users/wenjian/Desktop/github/fantasy/node_modules/vue-loader/lib/index.js","mtime":1590023615263}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"cityList\",\n  data: function data() {\n    return {\n      cityData: [],\n      hostCity: [],\n      isLoading: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 获取本次存储\n    var cityData = window.localStorage.getItem(\"cityList\");\n    var hostCity = window.localStorage.getItem(\"hostCity\"); // 判断本地存储是否存在，存在就不发送ajax请求\n\n    if (cityData && hostCity) {\n      this.cityData = JSON.parse(cityData);\n      this.hostCity = JSON.parse(hostCity);\n      this.isLoading = false;\n    } else {\n      // 获取数据\n      this.axios.get(\"/api/cityList\").then(function (res) {\n        // console.log(res.data.data)\n        if (res.status === 200) {\n          var data = res.data.data.cities; // 对数据进行处理\n\n          _this.cityData = _this.formatCityList(data);\n          _this.hostCity = _this.chooseHotCity(data); // 将数据进行本地存储\n\n          window.localStorage.setItem(\"cityList\", JSON.stringify(_this.formatCityList(data)));\n          window.localStorage.setItem(\"hostCity\", JSON.stringify(_this.chooseHotCity(data))); // 数据处理成功之后，将isLoading 变成false\n\n          _this.isLoading = false;\n        }\n      });\n    }\n  },\n  methods: {\n    // 对单词首字母进行\n    formatCityList: function formatCityList(cities) {\n      // 检查数据是否传入\n      // console.log(cities)\n      // 这里可以作出一个判断？ 判断数据是否正确传入\n      var cityList = []; // var hostList = [];\n      // 循环遍历传递过来的数据\n\n      for (var i = 0; i < cities.length; i++) {\n        // 取出数组中每个单词的字母\n        var firstLetter = cities[i].py.substring(0, 1).toUpperCase();\n\n        if (toCom()) {\n          cityList.push({\n            index: firstLetter,\n            list: [{\n              nm: cities[i].nm,\n              id: cities[i].id\n            }]\n          });\n        } else {\n          // 累加到已有索引\n          for (var j = 0; j < cityList.length; j++) {\n            if (cityList[j].index === firstLetter) {\n              cityList[j].list.push({\n                nm: cities[i].nm,\n                id: cities[i].id\n              });\n            }\n          }\n        }\n      } // 处理排序\n\n\n      cityList.sort(function (a, b) {\n        if (a.index > b.index) {\n          return 1;\n        } else if (a.index < b.index) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }); //在写一个判断的函数\n\n      function toCom() {\n        for (var i = 0; i < cityList.length; i++) {\n          if (cityList[i].index === firstLetter) {\n            return false;\n          }\n        }\n\n        return true;\n      } // console.log(cityList)\n\n\n      return cityList;\n    },\n    // 选出热门城市\n    chooseHotCity: function chooseHotCity(cities) {\n      var hostCity = [];\n\n      for (var i = 0; i < cities.length; i++) {\n        if (cities[i].isHot === 1) {\n          hostCity.push(cities[i]);\n        }\n      }\n\n      return hostCity;\n    },\n    // 点击字母进行跳转\n    toTarget: function toTarget(index) {\n      // console.log(index)\n      // 处理dom\n      var h2 = this.$refs.city_sort.getElementsByTagName(\"h2\"); // console.log(h2)\n      // console.log(this.$refs.city_sort.parentNode.scrollTop)\n      // 给父级的scrollTop 设置为 当前h2的卷曲出去的高度\n      // this.$refs.city_sort.parentNode.scrollTop = h2[index].offsetTop;\n      // this.$refs.jump.jump(-h2[index].offsetTop);\n      // 调用了组件中的方法  使用ref标记\n      // 注意：将ref放在组件上，则this.$refs.组件名可以拿到组件的对象，拿到组件对象就可以调用组件对象中的方法\n\n      this.$refs.jump.jump(-h2[index].offsetTop);\n    },\n    // 点击改变城市city\n    changCity: function changCity(nm, id) {\n      // console.log(nm, id)\n      // 调用vuex中的mutations中的方法进行处理  ok\n      this.$store.commit(\"city/CITY_INFO\", {\n        nm: nm,\n        id: id\n      }); // 为了返回时，城市数据不再该改变。将数据本地化处理\n\n      window.localStorage.setItem(\"city_nm\", nm);\n      window.localStorage.setItem(\"city_id\", id); // 编程式导航\n\n      this.$router.push(\"/movie/nowPlaying\");\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"city_body\">\n    <div class=\"city_list\">\n      <loading v-if=\"isLoading\"></loading>\n      <scroller ref=\"jump\" v-else>\n        <!-- 由于下面有两个部分，所以补一个div -->\n        <div>\n          <div class=\"city_hot\">\n            <h2>热门城市</h2>\n            <ul class=\"clearfix\">\n              <!-- tap点击事件处理城市信息 -->\n              <li\n                v-for=\"item in hostCity\"\n                :key=\"item.id\"\n                @tap=\"changCity(item.nm,item.id)\"\n              >{{ item.nm }}</li>\n            </ul>\n          </div>\n          <div class=\"city_sort\" ref=\"city_sort\">\n            <div v-for=\"item in cityData\" :key=\"item.id\">\n              <h2>{{ item.index }}</h2>\n              <ul>\n                <li\n                  v-for=\" list  in item.list\"\n                  :key=\"list.id\"\n                  @tap=\"changCity(list.nm,list.id)\"\n                >{{ list.nm }}</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </scroller>\n    </div>\n    <div class=\"city_index\">\n      <ul>\n        <li\n          v-for=\"(item,index) in cityData\"\n          :key=\"item.id\"\n          @click=\"toTarget(index)\"\n        >{{ item.index }}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"cityList\",\n  data: function() {\n    return {\n      cityData: [],\n      hostCity: [],\n      isLoading: true\n    };\n  },\n  mounted() {\n    // 获取本次存储\n    let cityData = window.localStorage.getItem(\"cityList\");\n    let hostCity = window.localStorage.getItem(\"hostCity\");\n    // 判断本地存储是否存在，存在就不发送ajax请求\n    if (cityData && hostCity) {\n      this.cityData = JSON.parse(cityData);\n      this.hostCity = JSON.parse(hostCity);\n      this.isLoading = false;\n    } else {\n      // 获取数据\n      this.axios.get(\"/api/cityList\").then(res => {\n        // console.log(res.data.data)\n        if (res.status === 200) {\n          var data = res.data.data.cities;\n          // 对数据进行处理\n          this.cityData = this.formatCityList(data);\n          this.hostCity = this.chooseHotCity(data);\n          // 将数据进行本地存储\n          window.localStorage.setItem(\n            \"cityList\",\n            JSON.stringify(this.formatCityList(data))\n          );\n          window.localStorage.setItem(\n            \"hostCity\",\n            JSON.stringify(this.chooseHotCity(data))\n          );\n\n          // 数据处理成功之后，将isLoading 变成false\n          this.isLoading = false;\n        }\n      });\n    }\n  },\n  methods: {\n    // 对单词首字母进行\n    formatCityList(cities) {\n      // 检查数据是否传入\n      // console.log(cities)\n      // 这里可以作出一个判断？ 判断数据是否正确传入\n      var cityList = [];\n      // var hostList = [];\n      // 循环遍历传递过来的数据\n      for (var i = 0; i < cities.length; i++) {\n        // 取出数组中每个单词的字母\n        var firstLetter = cities[i].py.substring(0, 1).toUpperCase();\n        if (toCom()) {\n          cityList.push({\n            index: firstLetter,\n            list: [{ nm: cities[i].nm, id: cities[i].id }]\n          });\n        } else {\n          // 累加到已有索引\n          for (var j = 0; j < cityList.length; j++) {\n            if (cityList[j].index === firstLetter) {\n              cityList[j].list.push({ nm: cities[i].nm, id: cities[i].id });\n            }\n          }\n        }\n      }\n      // 处理排序\n      cityList.sort(function(a, b) {\n        if (a.index > b.index) {\n          return 1;\n        } else if (a.index < b.index) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n\n      //在写一个判断的函数\n      function toCom() {\n        for (var i = 0; i < cityList.length; i++) {\n          if (cityList[i].index === firstLetter) {\n            return false;\n          }\n        }\n        return true;\n      }\n      // console.log(cityList)\n      return cityList;\n    },\n    // 选出热门城市\n    chooseHotCity(cities) {\n      let hostCity = [];\n      for (var i = 0; i < cities.length; i++) {\n        if (cities[i].isHot === 1) {\n          hostCity.push(cities[i]);\n        }\n      }\n      return hostCity;\n    },\n    // 点击字母进行跳转\n    toTarget(index) {\n      // console.log(index)\n      // 处理dom\n      let h2 = this.$refs.city_sort.getElementsByTagName(\"h2\");\n      // console.log(h2)\n      // console.log(this.$refs.city_sort.parentNode.scrollTop)\n      // 给父级的scrollTop 设置为 当前h2的卷曲出去的高度\n      // this.$refs.city_sort.parentNode.scrollTop = h2[index].offsetTop;\n      // this.$refs.jump.jump(-h2[index].offsetTop);\n      // 调用了组件中的方法  使用ref标记\n      // 注意：将ref放在组件上，则this.$refs.组件名可以拿到组件的对象，拿到组件对象就可以调用组件对象中的方法\n      this.$refs.jump.jump(-h2[index].offsetTop);\n    },\n    // 点击改变城市city\n    changCity(nm, id) {\n      // console.log(nm, id)\n      // 调用vuex中的mutations中的方法进行处理  ok\n      this.$store.commit(\"city/CITY_INFO\", { nm, id });\n      // 为了返回时，城市数据不再该改变。将数据本地化处理\n      window.localStorage.setItem(\"city_nm\", nm);\n      window.localStorage.setItem(\"city_id\", id);\n      // 编程式导航\n      this.$router.push(\"/movie/nowPlaying\");\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.clearfix {\n  overflow: hidden;\n}\n.city_body {\n  margin-top: 80px;\n  margin-bottom: 60px;\n  display: flex;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n}\n.city_body .city_list {\n  flex: 1;\n  width: 100%;\n  overflow: auto;\n  background: #fff;\n}\n.city_body .city_list::-webkit-scrollbar {\n  background-color: transparent;\n  width: 0;\n}\n.city_body .city_hot {\n  margin-top: 20px;\n}\n.city_body .city_hot h2 {\n  padding-left: 15px;\n  line-height: 30px;\n  font-size: 14px;\n  background: #f0f0f0;\n  font-weight: normal;\n}\n\n.city_body .city_hot ul li {\n  float: left;\n  background: #fff;\n  width: 29%;\n  height: 33px;\n  margin-top: 15px;\n  margin-left: 3%;\n  padding: 0 4px;\n  border: 1px solid #e6e6e6;\n  border-radius: 3px;\n  line-height: 33px;\n  text-align: center;\n  box-sizing: border-box;\n}\n.city_body .city_sort div {\n  margin-top: 20px;\n}\n.city_body .city_sort h2 {\n  padding-left: 15px;\n  line-height: 30px;\n  font-size: 14px;\n  background: #f0f0f0;\n  font-weight: normal;\n}\n.city_body .city_sort ul {\n  padding-left: 10px;\n  margin-top: 10px;\n}\n.city_body .city_sort ul li {\n  line-height: 30px;\n  line-height: 30px;\n}\n.city_body .city_index {\n  width: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  border-left: 1px #e6e6e6 solid;\n  li {\n    margin: 7px 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/movieIndex/cityList"}]}